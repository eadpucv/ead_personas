$(function(){module("button"),test("should provide no conflict",function(){var t=$.fn.button.noConflict();ok(!$.fn.button,"button was set back to undefined (org value)"),$.fn.button=t}),test("should be defined on jquery object",function(){ok($(document.body).button,"button method is defined")}),test("should return element",function(){ok($(document.body).button()[0]==document.body,"document.body returned")}),test("should return set state to loading",function(){var t=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(t.html(),"mdo","btn text equals mdo"),t.button("loading"),equal(t.html(),"fat","btn text equals fat"),stop(),setTimeout(function(){ok(t.attr("disabled"),"btn is disabled"),ok(t.hasClass("disabled"),"btn has disabled class"),start()},0)}),test("should return reset state",function(){var t=$('<button class="btn" data-loading-text="fat">mdo</button>');equal(t.html(),"mdo","btn text equals mdo"),t.button("loading"),equal(t.html(),"fat","btn text equals fat"),stop(),setTimeout(function(){ok(t.attr("disabled"),"btn is disabled"),ok(t.hasClass("disabled"),"btn has disabled class"),start(),stop(),t.button("reset"),equal(t.html(),"mdo","btn text equals mdo"),setTimeout(function(){ok(!t.attr("disabled"),"btn is not disabled"),ok(!t.hasClass("disabled"),"btn does not have disabled class"),start()},0)},0)}),test("should toggle active",function(){var t=$('<button class="btn">mdo</button>');ok(!t.hasClass("active"),"btn does not have active class"),t.button("toggle"),ok(t.hasClass("active"),"btn has class active")}),test("should toggle active when btn children are clicked",function(){var t=$('<button class="btn" data-toggle="button">mdo</button>'),e=$("<i></i>");t.append(e).appendTo($("#qunit-fixture")),ok(!t.hasClass("active"),"btn does not have active class"),e.click(),ok(t.hasClass("active"),"btn has class active")}),test("should toggle active when btn children are clicked within btn-group",function(){var t=$('<div class="btn-group" data-toggle="buttons"></div>'),e=$('<button class="btn">fat</button>'),a=$("<i></i>");t.append(e.append(a)).appendTo($("#qunit-fixture")),ok(!e.hasClass("active"),"btn does not have active class"),a.click(),ok(e.hasClass("active"),"btn has class active")}),test("should check for closest matching toggle",function(){var t='<div class="btn-group" data-toggle="buttons"><label class="btn btn-primary active"><input type="radio" name="options" id="option1" checked="true"> Option 1</label><label class="btn btn-primary"><input type="radio" name="options" id="option2"> Option 2</label><label class="btn btn-primary"><input type="radio" name="options" id="option3"> Option 3</label></div>';t=$(t);var e=$(t.children()[0]),a=$(t.children()[1]);$(t.children()[2]);t.appendTo($("#qunit-fixture")),ok(e.hasClass("active"),"btn1 has active class"),ok(e.find("input").prop("checked"),"btn1 is checked"),ok(!a.hasClass("active"),"btn2 does not have active class"),ok(!a.find("input").prop("checked"),"btn2 is not checked"),a.find("input").click(),ok(!e.hasClass("active"),"btn1 does not have active class"),ok(!e.find("input").prop("checked"),"btn1 is checked"),ok(a.hasClass("active"),"btn2 has active class"),ok(a.find("input").prop("checked"),"btn2 is checked")})});